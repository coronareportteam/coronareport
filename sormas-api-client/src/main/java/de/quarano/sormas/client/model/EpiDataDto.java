/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.44.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.quarano.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import de.quarano.sormas.client.model.AnimalCondition;
import de.quarano.sormas.client.model.EpiDataBurialDto;
import de.quarano.sormas.client.model.EpiDataGatheringDto;
import de.quarano.sormas.client.model.EpiDataTravelDto;
import de.quarano.sormas.client.model.Vaccination;
import de.quarano.sormas.client.model.WaterSource;
import de.quarano.sormas.client.model.YesNoUnknown;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
/**
 * EpiDataDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-09T17:56:16.099120+02:00[Europe/Berlin]")
public class EpiDataDto {
  @JsonProperty("creationDate")
  private OffsetDateTime creationDate = null;

  @JsonProperty("changeDate")
  private OffsetDateTime changeDate = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("burialAttended")
  private YesNoUnknown burialAttended = null;

  @JsonProperty("gatheringAttended")
  private YesNoUnknown gatheringAttended = null;

  @JsonProperty("traveled")
  private YesNoUnknown traveled = null;

  @JsonProperty("burials")
  private List<EpiDataBurialDto> burials = null;

  @JsonProperty("gatherings")
  private List<EpiDataGatheringDto> gatherings = null;

  @JsonProperty("travels")
  private List<EpiDataTravelDto> travels = null;

  @JsonProperty("directContactConfirmedCase")
  private YesNoUnknown directContactConfirmedCase = null;

  @JsonProperty("directContactProbableCase")
  private YesNoUnknown directContactProbableCase = null;

  @JsonProperty("closeContactProbableCase")
  private YesNoUnknown closeContactProbableCase = null;

  @JsonProperty("areaConfirmedCases")
  private YesNoUnknown areaConfirmedCases = null;

  @JsonProperty("processingConfirmedCaseFluidUnsafe")
  private YesNoUnknown processingConfirmedCaseFluidUnsafe = null;

  @JsonProperty("percutaneousCaseBlood")
  private YesNoUnknown percutaneousCaseBlood = null;

  @JsonProperty("directContactDeadUnsafe")
  private YesNoUnknown directContactDeadUnsafe = null;

  @JsonProperty("processingSuspectedCaseSampleUnsafe")
  private YesNoUnknown processingSuspectedCaseSampleUnsafe = null;

  @JsonProperty("areaInfectedAnimals")
  private YesNoUnknown areaInfectedAnimals = null;

  @JsonProperty("sickDeadAnimals")
  private YesNoUnknown sickDeadAnimals = null;

  @JsonProperty("sickDeadAnimalsDetails")
  private String sickDeadAnimalsDetails = null;

  @JsonProperty("sickDeadAnimalsDate")
  private OffsetDateTime sickDeadAnimalsDate = null;

  @JsonProperty("sickDeadAnimalsLocation")
  private String sickDeadAnimalsLocation = null;

  @JsonProperty("eatingRawAnimalsInInfectedArea")
  private YesNoUnknown eatingRawAnimalsInInfectedArea = null;

  @JsonProperty("eatingRawAnimals")
  private YesNoUnknown eatingRawAnimals = null;

  @JsonProperty("eatingRawAnimalsDetails")
  private String eatingRawAnimalsDetails = null;

  @JsonProperty("rodents")
  private YesNoUnknown rodents = null;

  @JsonProperty("bats")
  private YesNoUnknown bats = null;

  @JsonProperty("primates")
  private YesNoUnknown primates = null;

  @JsonProperty("swine")
  private YesNoUnknown swine = null;

  @JsonProperty("birds")
  private YesNoUnknown birds = null;

  @JsonProperty("rabbits")
  private YesNoUnknown rabbits = null;

  @JsonProperty("cattle")
  private YesNoUnknown cattle = null;

  @JsonProperty("dogs")
  private YesNoUnknown dogs = null;

  @JsonProperty("cats")
  private YesNoUnknown cats = null;

  @JsonProperty("canidae")
  private YesNoUnknown canidae = null;

  @JsonProperty("otherAnimals")
  private YesNoUnknown otherAnimals = null;

  @JsonProperty("otherAnimalsDetails")
  private String otherAnimalsDetails = null;

  @JsonProperty("waterSource")
  private WaterSource waterSource = null;

  @JsonProperty("waterSourceOther")
  private String waterSourceOther = null;

  @JsonProperty("waterBody")
  private YesNoUnknown waterBody = null;

  @JsonProperty("waterBodyDetails")
  private String waterBodyDetails = null;

  @JsonProperty("tickBite")
  private YesNoUnknown tickBite = null;

  @JsonProperty("fleaBite")
  private YesNoUnknown fleaBite = null;

  @JsonProperty("kindOfExposureBite")
  private YesNoUnknown kindOfExposureBite = null;

  @JsonProperty("kindOfExposureTouch")
  private YesNoUnknown kindOfExposureTouch = null;

  @JsonProperty("kindOfExposureScratch")
  private YesNoUnknown kindOfExposureScratch = null;

  @JsonProperty("kindOfExposureLick")
  private YesNoUnknown kindOfExposureLick = null;

  @JsonProperty("kindOfExposureOther")
  private YesNoUnknown kindOfExposureOther = null;

  @JsonProperty("kindOfExposureDetails")
  private String kindOfExposureDetails = null;

  @JsonProperty("dateOfLastExposure")
  private OffsetDateTime dateOfLastExposure = null;

  @JsonProperty("placeOfLastExposure")
  private String placeOfLastExposure = null;

  @JsonProperty("animalCondition")
  private AnimalCondition animalCondition = null;

  @JsonProperty("animalVaccinationStatus")
  private Vaccination animalVaccinationStatus = null;

  @JsonProperty("prophylaxisStatus")
  private YesNoUnknown prophylaxisStatus = null;

  @JsonProperty("dateOfProphylaxis")
  private OffsetDateTime dateOfProphylaxis = null;

  @JsonProperty("visitedHealthFacility")
  private YesNoUnknown visitedHealthFacility = null;

  @JsonProperty("contactWithSourceRespiratoryCase")
  private YesNoUnknown contactWithSourceRespiratoryCase = null;

  @JsonProperty("visitedAnimalMarket")
  private YesNoUnknown visitedAnimalMarket = null;

  @JsonProperty("camels")
  private YesNoUnknown camels = null;

  @JsonProperty("snakes")
  private YesNoUnknown snakes = null;

  public EpiDataDto creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public EpiDataDto changeDate(OffsetDateTime changeDate) {
    this.changeDate = changeDate;
    return this;
  }

   /**
   * Get changeDate
   * @return changeDate
  **/
  @Schema(description = "")
  public OffsetDateTime getChangeDate() {
    return changeDate;
  }

  public void setChangeDate(OffsetDateTime changeDate) {
    this.changeDate = changeDate;
  }

  public EpiDataDto uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public EpiDataDto burialAttended(YesNoUnknown burialAttended) {
    this.burialAttended = burialAttended;
    return this;
  }

   /**
   * Get burialAttended
   * @return burialAttended
  **/
  @Schema(description = "")
  public YesNoUnknown getBurialAttended() {
    return burialAttended;
  }

  public void setBurialAttended(YesNoUnknown burialAttended) {
    this.burialAttended = burialAttended;
  }

  public EpiDataDto gatheringAttended(YesNoUnknown gatheringAttended) {
    this.gatheringAttended = gatheringAttended;
    return this;
  }

   /**
   * Get gatheringAttended
   * @return gatheringAttended
  **/
  @Schema(description = "")
  public YesNoUnknown getGatheringAttended() {
    return gatheringAttended;
  }

  public void setGatheringAttended(YesNoUnknown gatheringAttended) {
    this.gatheringAttended = gatheringAttended;
  }

  public EpiDataDto traveled(YesNoUnknown traveled) {
    this.traveled = traveled;
    return this;
  }

   /**
   * Get traveled
   * @return traveled
  **/
  @Schema(description = "")
  public YesNoUnknown getTraveled() {
    return traveled;
  }

  public void setTraveled(YesNoUnknown traveled) {
    this.traveled = traveled;
  }

  public EpiDataDto burials(List<EpiDataBurialDto> burials) {
    this.burials = burials;
    return this;
  }

  public EpiDataDto addBurialsItem(EpiDataBurialDto burialsItem) {
    if (this.burials == null) {
      this.burials = new ArrayList<>();
    }
    this.burials.add(burialsItem);
    return this;
  }

   /**
   * Get burials
   * @return burials
  **/
  @Schema(description = "")
  public List<EpiDataBurialDto> getBurials() {
    return burials;
  }

  public void setBurials(List<EpiDataBurialDto> burials) {
    this.burials = burials;
  }

  public EpiDataDto gatherings(List<EpiDataGatheringDto> gatherings) {
    this.gatherings = gatherings;
    return this;
  }

  public EpiDataDto addGatheringsItem(EpiDataGatheringDto gatheringsItem) {
    if (this.gatherings == null) {
      this.gatherings = new ArrayList<>();
    }
    this.gatherings.add(gatheringsItem);
    return this;
  }

   /**
   * Get gatherings
   * @return gatherings
  **/
  @Schema(description = "")
  public List<EpiDataGatheringDto> getGatherings() {
    return gatherings;
  }

  public void setGatherings(List<EpiDataGatheringDto> gatherings) {
    this.gatherings = gatherings;
  }

  public EpiDataDto travels(List<EpiDataTravelDto> travels) {
    this.travels = travels;
    return this;
  }

  public EpiDataDto addTravelsItem(EpiDataTravelDto travelsItem) {
    if (this.travels == null) {
      this.travels = new ArrayList<>();
    }
    this.travels.add(travelsItem);
    return this;
  }

   /**
   * Get travels
   * @return travels
  **/
  @Schema(description = "")
  public List<EpiDataTravelDto> getTravels() {
    return travels;
  }

  public void setTravels(List<EpiDataTravelDto> travels) {
    this.travels = travels;
  }

  public EpiDataDto directContactConfirmedCase(YesNoUnknown directContactConfirmedCase) {
    this.directContactConfirmedCase = directContactConfirmedCase;
    return this;
  }

   /**
   * Get directContactConfirmedCase
   * @return directContactConfirmedCase
  **/
  @Schema(description = "")
  public YesNoUnknown getDirectContactConfirmedCase() {
    return directContactConfirmedCase;
  }

  public void setDirectContactConfirmedCase(YesNoUnknown directContactConfirmedCase) {
    this.directContactConfirmedCase = directContactConfirmedCase;
  }

  public EpiDataDto directContactProbableCase(YesNoUnknown directContactProbableCase) {
    this.directContactProbableCase = directContactProbableCase;
    return this;
  }

   /**
   * Get directContactProbableCase
   * @return directContactProbableCase
  **/
  @Schema(description = "")
  public YesNoUnknown getDirectContactProbableCase() {
    return directContactProbableCase;
  }

  public void setDirectContactProbableCase(YesNoUnknown directContactProbableCase) {
    this.directContactProbableCase = directContactProbableCase;
  }

  public EpiDataDto closeContactProbableCase(YesNoUnknown closeContactProbableCase) {
    this.closeContactProbableCase = closeContactProbableCase;
    return this;
  }

   /**
   * Get closeContactProbableCase
   * @return closeContactProbableCase
  **/
  @Schema(description = "")
  public YesNoUnknown getCloseContactProbableCase() {
    return closeContactProbableCase;
  }

  public void setCloseContactProbableCase(YesNoUnknown closeContactProbableCase) {
    this.closeContactProbableCase = closeContactProbableCase;
  }

  public EpiDataDto areaConfirmedCases(YesNoUnknown areaConfirmedCases) {
    this.areaConfirmedCases = areaConfirmedCases;
    return this;
  }

   /**
   * Get areaConfirmedCases
   * @return areaConfirmedCases
  **/
  @Schema(description = "")
  public YesNoUnknown getAreaConfirmedCases() {
    return areaConfirmedCases;
  }

  public void setAreaConfirmedCases(YesNoUnknown areaConfirmedCases) {
    this.areaConfirmedCases = areaConfirmedCases;
  }

  public EpiDataDto processingConfirmedCaseFluidUnsafe(YesNoUnknown processingConfirmedCaseFluidUnsafe) {
    this.processingConfirmedCaseFluidUnsafe = processingConfirmedCaseFluidUnsafe;
    return this;
  }

   /**
   * Get processingConfirmedCaseFluidUnsafe
   * @return processingConfirmedCaseFluidUnsafe
  **/
  @Schema(description = "")
  public YesNoUnknown getProcessingConfirmedCaseFluidUnsafe() {
    return processingConfirmedCaseFluidUnsafe;
  }

  public void setProcessingConfirmedCaseFluidUnsafe(YesNoUnknown processingConfirmedCaseFluidUnsafe) {
    this.processingConfirmedCaseFluidUnsafe = processingConfirmedCaseFluidUnsafe;
  }

  public EpiDataDto percutaneousCaseBlood(YesNoUnknown percutaneousCaseBlood) {
    this.percutaneousCaseBlood = percutaneousCaseBlood;
    return this;
  }

   /**
   * Get percutaneousCaseBlood
   * @return percutaneousCaseBlood
  **/
  @Schema(description = "")
  public YesNoUnknown getPercutaneousCaseBlood() {
    return percutaneousCaseBlood;
  }

  public void setPercutaneousCaseBlood(YesNoUnknown percutaneousCaseBlood) {
    this.percutaneousCaseBlood = percutaneousCaseBlood;
  }

  public EpiDataDto directContactDeadUnsafe(YesNoUnknown directContactDeadUnsafe) {
    this.directContactDeadUnsafe = directContactDeadUnsafe;
    return this;
  }

   /**
   * Get directContactDeadUnsafe
   * @return directContactDeadUnsafe
  **/
  @Schema(description = "")
  public YesNoUnknown getDirectContactDeadUnsafe() {
    return directContactDeadUnsafe;
  }

  public void setDirectContactDeadUnsafe(YesNoUnknown directContactDeadUnsafe) {
    this.directContactDeadUnsafe = directContactDeadUnsafe;
  }

  public EpiDataDto processingSuspectedCaseSampleUnsafe(YesNoUnknown processingSuspectedCaseSampleUnsafe) {
    this.processingSuspectedCaseSampleUnsafe = processingSuspectedCaseSampleUnsafe;
    return this;
  }

   /**
   * Get processingSuspectedCaseSampleUnsafe
   * @return processingSuspectedCaseSampleUnsafe
  **/
  @Schema(description = "")
  public YesNoUnknown getProcessingSuspectedCaseSampleUnsafe() {
    return processingSuspectedCaseSampleUnsafe;
  }

  public void setProcessingSuspectedCaseSampleUnsafe(YesNoUnknown processingSuspectedCaseSampleUnsafe) {
    this.processingSuspectedCaseSampleUnsafe = processingSuspectedCaseSampleUnsafe;
  }

  public EpiDataDto areaInfectedAnimals(YesNoUnknown areaInfectedAnimals) {
    this.areaInfectedAnimals = areaInfectedAnimals;
    return this;
  }

   /**
   * Get areaInfectedAnimals
   * @return areaInfectedAnimals
  **/
  @Schema(description = "")
  public YesNoUnknown getAreaInfectedAnimals() {
    return areaInfectedAnimals;
  }

  public void setAreaInfectedAnimals(YesNoUnknown areaInfectedAnimals) {
    this.areaInfectedAnimals = areaInfectedAnimals;
  }

  public EpiDataDto sickDeadAnimals(YesNoUnknown sickDeadAnimals) {
    this.sickDeadAnimals = sickDeadAnimals;
    return this;
  }

   /**
   * Get sickDeadAnimals
   * @return sickDeadAnimals
  **/
  @Schema(description = "")
  public YesNoUnknown getSickDeadAnimals() {
    return sickDeadAnimals;
  }

  public void setSickDeadAnimals(YesNoUnknown sickDeadAnimals) {
    this.sickDeadAnimals = sickDeadAnimals;
  }

  public EpiDataDto sickDeadAnimalsDetails(String sickDeadAnimalsDetails) {
    this.sickDeadAnimalsDetails = sickDeadAnimalsDetails;
    return this;
  }

   /**
   * Get sickDeadAnimalsDetails
   * @return sickDeadAnimalsDetails
  **/
  @Schema(description = "")
  public String getSickDeadAnimalsDetails() {
    return sickDeadAnimalsDetails;
  }

  public void setSickDeadAnimalsDetails(String sickDeadAnimalsDetails) {
    this.sickDeadAnimalsDetails = sickDeadAnimalsDetails;
  }

  public EpiDataDto sickDeadAnimalsDate(OffsetDateTime sickDeadAnimalsDate) {
    this.sickDeadAnimalsDate = sickDeadAnimalsDate;
    return this;
  }

   /**
   * Get sickDeadAnimalsDate
   * @return sickDeadAnimalsDate
  **/
  @Schema(description = "")
  public OffsetDateTime getSickDeadAnimalsDate() {
    return sickDeadAnimalsDate;
  }

  public void setSickDeadAnimalsDate(OffsetDateTime sickDeadAnimalsDate) {
    this.sickDeadAnimalsDate = sickDeadAnimalsDate;
  }

  public EpiDataDto sickDeadAnimalsLocation(String sickDeadAnimalsLocation) {
    this.sickDeadAnimalsLocation = sickDeadAnimalsLocation;
    return this;
  }

   /**
   * Get sickDeadAnimalsLocation
   * @return sickDeadAnimalsLocation
  **/
  @Schema(description = "")
  public String getSickDeadAnimalsLocation() {
    return sickDeadAnimalsLocation;
  }

  public void setSickDeadAnimalsLocation(String sickDeadAnimalsLocation) {
    this.sickDeadAnimalsLocation = sickDeadAnimalsLocation;
  }

  public EpiDataDto eatingRawAnimalsInInfectedArea(YesNoUnknown eatingRawAnimalsInInfectedArea) {
    this.eatingRawAnimalsInInfectedArea = eatingRawAnimalsInInfectedArea;
    return this;
  }

   /**
   * Get eatingRawAnimalsInInfectedArea
   * @return eatingRawAnimalsInInfectedArea
  **/
  @Schema(description = "")
  public YesNoUnknown getEatingRawAnimalsInInfectedArea() {
    return eatingRawAnimalsInInfectedArea;
  }

  public void setEatingRawAnimalsInInfectedArea(YesNoUnknown eatingRawAnimalsInInfectedArea) {
    this.eatingRawAnimalsInInfectedArea = eatingRawAnimalsInInfectedArea;
  }

  public EpiDataDto eatingRawAnimals(YesNoUnknown eatingRawAnimals) {
    this.eatingRawAnimals = eatingRawAnimals;
    return this;
  }

   /**
   * Get eatingRawAnimals
   * @return eatingRawAnimals
  **/
  @Schema(description = "")
  public YesNoUnknown getEatingRawAnimals() {
    return eatingRawAnimals;
  }

  public void setEatingRawAnimals(YesNoUnknown eatingRawAnimals) {
    this.eatingRawAnimals = eatingRawAnimals;
  }

  public EpiDataDto eatingRawAnimalsDetails(String eatingRawAnimalsDetails) {
    this.eatingRawAnimalsDetails = eatingRawAnimalsDetails;
    return this;
  }

   /**
   * Get eatingRawAnimalsDetails
   * @return eatingRawAnimalsDetails
  **/
  @Schema(description = "")
  public String getEatingRawAnimalsDetails() {
    return eatingRawAnimalsDetails;
  }

  public void setEatingRawAnimalsDetails(String eatingRawAnimalsDetails) {
    this.eatingRawAnimalsDetails = eatingRawAnimalsDetails;
  }

  public EpiDataDto rodents(YesNoUnknown rodents) {
    this.rodents = rodents;
    return this;
  }

   /**
   * Get rodents
   * @return rodents
  **/
  @Schema(description = "")
  public YesNoUnknown getRodents() {
    return rodents;
  }

  public void setRodents(YesNoUnknown rodents) {
    this.rodents = rodents;
  }

  public EpiDataDto bats(YesNoUnknown bats) {
    this.bats = bats;
    return this;
  }

   /**
   * Get bats
   * @return bats
  **/
  @Schema(description = "")
  public YesNoUnknown getBats() {
    return bats;
  }

  public void setBats(YesNoUnknown bats) {
    this.bats = bats;
  }

  public EpiDataDto primates(YesNoUnknown primates) {
    this.primates = primates;
    return this;
  }

   /**
   * Get primates
   * @return primates
  **/
  @Schema(description = "")
  public YesNoUnknown getPrimates() {
    return primates;
  }

  public void setPrimates(YesNoUnknown primates) {
    this.primates = primates;
  }

  public EpiDataDto swine(YesNoUnknown swine) {
    this.swine = swine;
    return this;
  }

   /**
   * Get swine
   * @return swine
  **/
  @Schema(description = "")
  public YesNoUnknown getSwine() {
    return swine;
  }

  public void setSwine(YesNoUnknown swine) {
    this.swine = swine;
  }

  public EpiDataDto birds(YesNoUnknown birds) {
    this.birds = birds;
    return this;
  }

   /**
   * Get birds
   * @return birds
  **/
  @Schema(description = "")
  public YesNoUnknown getBirds() {
    return birds;
  }

  public void setBirds(YesNoUnknown birds) {
    this.birds = birds;
  }

  public EpiDataDto rabbits(YesNoUnknown rabbits) {
    this.rabbits = rabbits;
    return this;
  }

   /**
   * Get rabbits
   * @return rabbits
  **/
  @Schema(description = "")
  public YesNoUnknown getRabbits() {
    return rabbits;
  }

  public void setRabbits(YesNoUnknown rabbits) {
    this.rabbits = rabbits;
  }

  public EpiDataDto cattle(YesNoUnknown cattle) {
    this.cattle = cattle;
    return this;
  }

   /**
   * Get cattle
   * @return cattle
  **/
  @Schema(description = "")
  public YesNoUnknown getCattle() {
    return cattle;
  }

  public void setCattle(YesNoUnknown cattle) {
    this.cattle = cattle;
  }

  public EpiDataDto dogs(YesNoUnknown dogs) {
    this.dogs = dogs;
    return this;
  }

   /**
   * Get dogs
   * @return dogs
  **/
  @Schema(description = "")
  public YesNoUnknown getDogs() {
    return dogs;
  }

  public void setDogs(YesNoUnknown dogs) {
    this.dogs = dogs;
  }

  public EpiDataDto cats(YesNoUnknown cats) {
    this.cats = cats;
    return this;
  }

   /**
   * Get cats
   * @return cats
  **/
  @Schema(description = "")
  public YesNoUnknown getCats() {
    return cats;
  }

  public void setCats(YesNoUnknown cats) {
    this.cats = cats;
  }

  public EpiDataDto canidae(YesNoUnknown canidae) {
    this.canidae = canidae;
    return this;
  }

   /**
   * Get canidae
   * @return canidae
  **/
  @Schema(description = "")
  public YesNoUnknown getCanidae() {
    return canidae;
  }

  public void setCanidae(YesNoUnknown canidae) {
    this.canidae = canidae;
  }

  public EpiDataDto otherAnimals(YesNoUnknown otherAnimals) {
    this.otherAnimals = otherAnimals;
    return this;
  }

   /**
   * Get otherAnimals
   * @return otherAnimals
  **/
  @Schema(description = "")
  public YesNoUnknown getOtherAnimals() {
    return otherAnimals;
  }

  public void setOtherAnimals(YesNoUnknown otherAnimals) {
    this.otherAnimals = otherAnimals;
  }

  public EpiDataDto otherAnimalsDetails(String otherAnimalsDetails) {
    this.otherAnimalsDetails = otherAnimalsDetails;
    return this;
  }

   /**
   * Get otherAnimalsDetails
   * @return otherAnimalsDetails
  **/
  @Schema(description = "")
  public String getOtherAnimalsDetails() {
    return otherAnimalsDetails;
  }

  public void setOtherAnimalsDetails(String otherAnimalsDetails) {
    this.otherAnimalsDetails = otherAnimalsDetails;
  }

  public EpiDataDto waterSource(WaterSource waterSource) {
    this.waterSource = waterSource;
    return this;
  }

   /**
   * Get waterSource
   * @return waterSource
  **/
  @Schema(description = "")
  public WaterSource getWaterSource() {
    return waterSource;
  }

  public void setWaterSource(WaterSource waterSource) {
    this.waterSource = waterSource;
  }

  public EpiDataDto waterSourceOther(String waterSourceOther) {
    this.waterSourceOther = waterSourceOther;
    return this;
  }

   /**
   * Get waterSourceOther
   * @return waterSourceOther
  **/
  @Schema(description = "")
  public String getWaterSourceOther() {
    return waterSourceOther;
  }

  public void setWaterSourceOther(String waterSourceOther) {
    this.waterSourceOther = waterSourceOther;
  }

  public EpiDataDto waterBody(YesNoUnknown waterBody) {
    this.waterBody = waterBody;
    return this;
  }

   /**
   * Get waterBody
   * @return waterBody
  **/
  @Schema(description = "")
  public YesNoUnknown getWaterBody() {
    return waterBody;
  }

  public void setWaterBody(YesNoUnknown waterBody) {
    this.waterBody = waterBody;
  }

  public EpiDataDto waterBodyDetails(String waterBodyDetails) {
    this.waterBodyDetails = waterBodyDetails;
    return this;
  }

   /**
   * Get waterBodyDetails
   * @return waterBodyDetails
  **/
  @Schema(description = "")
  public String getWaterBodyDetails() {
    return waterBodyDetails;
  }

  public void setWaterBodyDetails(String waterBodyDetails) {
    this.waterBodyDetails = waterBodyDetails;
  }

  public EpiDataDto tickBite(YesNoUnknown tickBite) {
    this.tickBite = tickBite;
    return this;
  }

   /**
   * Get tickBite
   * @return tickBite
  **/
  @Schema(description = "")
  public YesNoUnknown getTickBite() {
    return tickBite;
  }

  public void setTickBite(YesNoUnknown tickBite) {
    this.tickBite = tickBite;
  }

  public EpiDataDto fleaBite(YesNoUnknown fleaBite) {
    this.fleaBite = fleaBite;
    return this;
  }

   /**
   * Get fleaBite
   * @return fleaBite
  **/
  @Schema(description = "")
  public YesNoUnknown getFleaBite() {
    return fleaBite;
  }

  public void setFleaBite(YesNoUnknown fleaBite) {
    this.fleaBite = fleaBite;
  }

  public EpiDataDto kindOfExposureBite(YesNoUnknown kindOfExposureBite) {
    this.kindOfExposureBite = kindOfExposureBite;
    return this;
  }

   /**
   * Get kindOfExposureBite
   * @return kindOfExposureBite
  **/
  @Schema(description = "")
  public YesNoUnknown getKindOfExposureBite() {
    return kindOfExposureBite;
  }

  public void setKindOfExposureBite(YesNoUnknown kindOfExposureBite) {
    this.kindOfExposureBite = kindOfExposureBite;
  }

  public EpiDataDto kindOfExposureTouch(YesNoUnknown kindOfExposureTouch) {
    this.kindOfExposureTouch = kindOfExposureTouch;
    return this;
  }

   /**
   * Get kindOfExposureTouch
   * @return kindOfExposureTouch
  **/
  @Schema(description = "")
  public YesNoUnknown getKindOfExposureTouch() {
    return kindOfExposureTouch;
  }

  public void setKindOfExposureTouch(YesNoUnknown kindOfExposureTouch) {
    this.kindOfExposureTouch = kindOfExposureTouch;
  }

  public EpiDataDto kindOfExposureScratch(YesNoUnknown kindOfExposureScratch) {
    this.kindOfExposureScratch = kindOfExposureScratch;
    return this;
  }

   /**
   * Get kindOfExposureScratch
   * @return kindOfExposureScratch
  **/
  @Schema(description = "")
  public YesNoUnknown getKindOfExposureScratch() {
    return kindOfExposureScratch;
  }

  public void setKindOfExposureScratch(YesNoUnknown kindOfExposureScratch) {
    this.kindOfExposureScratch = kindOfExposureScratch;
  }

  public EpiDataDto kindOfExposureLick(YesNoUnknown kindOfExposureLick) {
    this.kindOfExposureLick = kindOfExposureLick;
    return this;
  }

   /**
   * Get kindOfExposureLick
   * @return kindOfExposureLick
  **/
  @Schema(description = "")
  public YesNoUnknown getKindOfExposureLick() {
    return kindOfExposureLick;
  }

  public void setKindOfExposureLick(YesNoUnknown kindOfExposureLick) {
    this.kindOfExposureLick = kindOfExposureLick;
  }

  public EpiDataDto kindOfExposureOther(YesNoUnknown kindOfExposureOther) {
    this.kindOfExposureOther = kindOfExposureOther;
    return this;
  }

   /**
   * Get kindOfExposureOther
   * @return kindOfExposureOther
  **/
  @Schema(description = "")
  public YesNoUnknown getKindOfExposureOther() {
    return kindOfExposureOther;
  }

  public void setKindOfExposureOther(YesNoUnknown kindOfExposureOther) {
    this.kindOfExposureOther = kindOfExposureOther;
  }

  public EpiDataDto kindOfExposureDetails(String kindOfExposureDetails) {
    this.kindOfExposureDetails = kindOfExposureDetails;
    return this;
  }

   /**
   * Get kindOfExposureDetails
   * @return kindOfExposureDetails
  **/
  @Schema(description = "")
  public String getKindOfExposureDetails() {
    return kindOfExposureDetails;
  }

  public void setKindOfExposureDetails(String kindOfExposureDetails) {
    this.kindOfExposureDetails = kindOfExposureDetails;
  }

  public EpiDataDto dateOfLastExposure(OffsetDateTime dateOfLastExposure) {
    this.dateOfLastExposure = dateOfLastExposure;
    return this;
  }

   /**
   * Get dateOfLastExposure
   * @return dateOfLastExposure
  **/
  @Schema(description = "")
  public OffsetDateTime getDateOfLastExposure() {
    return dateOfLastExposure;
  }

  public void setDateOfLastExposure(OffsetDateTime dateOfLastExposure) {
    this.dateOfLastExposure = dateOfLastExposure;
  }

  public EpiDataDto placeOfLastExposure(String placeOfLastExposure) {
    this.placeOfLastExposure = placeOfLastExposure;
    return this;
  }

   /**
   * Get placeOfLastExposure
   * @return placeOfLastExposure
  **/
  @Schema(description = "")
  public String getPlaceOfLastExposure() {
    return placeOfLastExposure;
  }

  public void setPlaceOfLastExposure(String placeOfLastExposure) {
    this.placeOfLastExposure = placeOfLastExposure;
  }

  public EpiDataDto animalCondition(AnimalCondition animalCondition) {
    this.animalCondition = animalCondition;
    return this;
  }

   /**
   * Get animalCondition
   * @return animalCondition
  **/
  @Schema(description = "")
  public AnimalCondition getAnimalCondition() {
    return animalCondition;
  }

  public void setAnimalCondition(AnimalCondition animalCondition) {
    this.animalCondition = animalCondition;
  }

  public EpiDataDto animalVaccinationStatus(Vaccination animalVaccinationStatus) {
    this.animalVaccinationStatus = animalVaccinationStatus;
    return this;
  }

   /**
   * Get animalVaccinationStatus
   * @return animalVaccinationStatus
  **/
  @Schema(description = "")
  public Vaccination getAnimalVaccinationStatus() {
    return animalVaccinationStatus;
  }

  public void setAnimalVaccinationStatus(Vaccination animalVaccinationStatus) {
    this.animalVaccinationStatus = animalVaccinationStatus;
  }

  public EpiDataDto prophylaxisStatus(YesNoUnknown prophylaxisStatus) {
    this.prophylaxisStatus = prophylaxisStatus;
    return this;
  }

   /**
   * Get prophylaxisStatus
   * @return prophylaxisStatus
  **/
  @Schema(description = "")
  public YesNoUnknown getProphylaxisStatus() {
    return prophylaxisStatus;
  }

  public void setProphylaxisStatus(YesNoUnknown prophylaxisStatus) {
    this.prophylaxisStatus = prophylaxisStatus;
  }

  public EpiDataDto dateOfProphylaxis(OffsetDateTime dateOfProphylaxis) {
    this.dateOfProphylaxis = dateOfProphylaxis;
    return this;
  }

   /**
   * Get dateOfProphylaxis
   * @return dateOfProphylaxis
  **/
  @Schema(description = "")
  public OffsetDateTime getDateOfProphylaxis() {
    return dateOfProphylaxis;
  }

  public void setDateOfProphylaxis(OffsetDateTime dateOfProphylaxis) {
    this.dateOfProphylaxis = dateOfProphylaxis;
  }

  public EpiDataDto visitedHealthFacility(YesNoUnknown visitedHealthFacility) {
    this.visitedHealthFacility = visitedHealthFacility;
    return this;
  }

   /**
   * Get visitedHealthFacility
   * @return visitedHealthFacility
  **/
  @Schema(description = "")
  public YesNoUnknown getVisitedHealthFacility() {
    return visitedHealthFacility;
  }

  public void setVisitedHealthFacility(YesNoUnknown visitedHealthFacility) {
    this.visitedHealthFacility = visitedHealthFacility;
  }

  public EpiDataDto contactWithSourceRespiratoryCase(YesNoUnknown contactWithSourceRespiratoryCase) {
    this.contactWithSourceRespiratoryCase = contactWithSourceRespiratoryCase;
    return this;
  }

   /**
   * Get contactWithSourceRespiratoryCase
   * @return contactWithSourceRespiratoryCase
  **/
  @Schema(description = "")
  public YesNoUnknown getContactWithSourceRespiratoryCase() {
    return contactWithSourceRespiratoryCase;
  }

  public void setContactWithSourceRespiratoryCase(YesNoUnknown contactWithSourceRespiratoryCase) {
    this.contactWithSourceRespiratoryCase = contactWithSourceRespiratoryCase;
  }

  public EpiDataDto visitedAnimalMarket(YesNoUnknown visitedAnimalMarket) {
    this.visitedAnimalMarket = visitedAnimalMarket;
    return this;
  }

   /**
   * Get visitedAnimalMarket
   * @return visitedAnimalMarket
  **/
  @Schema(description = "")
  public YesNoUnknown getVisitedAnimalMarket() {
    return visitedAnimalMarket;
  }

  public void setVisitedAnimalMarket(YesNoUnknown visitedAnimalMarket) {
    this.visitedAnimalMarket = visitedAnimalMarket;
  }

  public EpiDataDto camels(YesNoUnknown camels) {
    this.camels = camels;
    return this;
  }

   /**
   * Get camels
   * @return camels
  **/
  @Schema(description = "")
  public YesNoUnknown getCamels() {
    return camels;
  }

  public void setCamels(YesNoUnknown camels) {
    this.camels = camels;
  }

  public EpiDataDto snakes(YesNoUnknown snakes) {
    this.snakes = snakes;
    return this;
  }

   /**
   * Get snakes
   * @return snakes
  **/
  @Schema(description = "")
  public YesNoUnknown getSnakes() {
    return snakes;
  }

  public void setSnakes(YesNoUnknown snakes) {
    this.snakes = snakes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EpiDataDto epiDataDto = (EpiDataDto) o;
    return Objects.equals(this.creationDate, epiDataDto.creationDate) &&
        Objects.equals(this.changeDate, epiDataDto.changeDate) &&
        Objects.equals(this.uuid, epiDataDto.uuid) &&
        Objects.equals(this.burialAttended, epiDataDto.burialAttended) &&
        Objects.equals(this.gatheringAttended, epiDataDto.gatheringAttended) &&
        Objects.equals(this.traveled, epiDataDto.traveled) &&
        Objects.equals(this.burials, epiDataDto.burials) &&
        Objects.equals(this.gatherings, epiDataDto.gatherings) &&
        Objects.equals(this.travels, epiDataDto.travels) &&
        Objects.equals(this.directContactConfirmedCase, epiDataDto.directContactConfirmedCase) &&
        Objects.equals(this.directContactProbableCase, epiDataDto.directContactProbableCase) &&
        Objects.equals(this.closeContactProbableCase, epiDataDto.closeContactProbableCase) &&
        Objects.equals(this.areaConfirmedCases, epiDataDto.areaConfirmedCases) &&
        Objects.equals(this.processingConfirmedCaseFluidUnsafe, epiDataDto.processingConfirmedCaseFluidUnsafe) &&
        Objects.equals(this.percutaneousCaseBlood, epiDataDto.percutaneousCaseBlood) &&
        Objects.equals(this.directContactDeadUnsafe, epiDataDto.directContactDeadUnsafe) &&
        Objects.equals(this.processingSuspectedCaseSampleUnsafe, epiDataDto.processingSuspectedCaseSampleUnsafe) &&
        Objects.equals(this.areaInfectedAnimals, epiDataDto.areaInfectedAnimals) &&
        Objects.equals(this.sickDeadAnimals, epiDataDto.sickDeadAnimals) &&
        Objects.equals(this.sickDeadAnimalsDetails, epiDataDto.sickDeadAnimalsDetails) &&
        Objects.equals(this.sickDeadAnimalsDate, epiDataDto.sickDeadAnimalsDate) &&
        Objects.equals(this.sickDeadAnimalsLocation, epiDataDto.sickDeadAnimalsLocation) &&
        Objects.equals(this.eatingRawAnimalsInInfectedArea, epiDataDto.eatingRawAnimalsInInfectedArea) &&
        Objects.equals(this.eatingRawAnimals, epiDataDto.eatingRawAnimals) &&
        Objects.equals(this.eatingRawAnimalsDetails, epiDataDto.eatingRawAnimalsDetails) &&
        Objects.equals(this.rodents, epiDataDto.rodents) &&
        Objects.equals(this.bats, epiDataDto.bats) &&
        Objects.equals(this.primates, epiDataDto.primates) &&
        Objects.equals(this.swine, epiDataDto.swine) &&
        Objects.equals(this.birds, epiDataDto.birds) &&
        Objects.equals(this.rabbits, epiDataDto.rabbits) &&
        Objects.equals(this.cattle, epiDataDto.cattle) &&
        Objects.equals(this.dogs, epiDataDto.dogs) &&
        Objects.equals(this.cats, epiDataDto.cats) &&
        Objects.equals(this.canidae, epiDataDto.canidae) &&
        Objects.equals(this.otherAnimals, epiDataDto.otherAnimals) &&
        Objects.equals(this.otherAnimalsDetails, epiDataDto.otherAnimalsDetails) &&
        Objects.equals(this.waterSource, epiDataDto.waterSource) &&
        Objects.equals(this.waterSourceOther, epiDataDto.waterSourceOther) &&
        Objects.equals(this.waterBody, epiDataDto.waterBody) &&
        Objects.equals(this.waterBodyDetails, epiDataDto.waterBodyDetails) &&
        Objects.equals(this.tickBite, epiDataDto.tickBite) &&
        Objects.equals(this.fleaBite, epiDataDto.fleaBite) &&
        Objects.equals(this.kindOfExposureBite, epiDataDto.kindOfExposureBite) &&
        Objects.equals(this.kindOfExposureTouch, epiDataDto.kindOfExposureTouch) &&
        Objects.equals(this.kindOfExposureScratch, epiDataDto.kindOfExposureScratch) &&
        Objects.equals(this.kindOfExposureLick, epiDataDto.kindOfExposureLick) &&
        Objects.equals(this.kindOfExposureOther, epiDataDto.kindOfExposureOther) &&
        Objects.equals(this.kindOfExposureDetails, epiDataDto.kindOfExposureDetails) &&
        Objects.equals(this.dateOfLastExposure, epiDataDto.dateOfLastExposure) &&
        Objects.equals(this.placeOfLastExposure, epiDataDto.placeOfLastExposure) &&
        Objects.equals(this.animalCondition, epiDataDto.animalCondition) &&
        Objects.equals(this.animalVaccinationStatus, epiDataDto.animalVaccinationStatus) &&
        Objects.equals(this.prophylaxisStatus, epiDataDto.prophylaxisStatus) &&
        Objects.equals(this.dateOfProphylaxis, epiDataDto.dateOfProphylaxis) &&
        Objects.equals(this.visitedHealthFacility, epiDataDto.visitedHealthFacility) &&
        Objects.equals(this.contactWithSourceRespiratoryCase, epiDataDto.contactWithSourceRespiratoryCase) &&
        Objects.equals(this.visitedAnimalMarket, epiDataDto.visitedAnimalMarket) &&
        Objects.equals(this.camels, epiDataDto.camels) &&
        Objects.equals(this.snakes, epiDataDto.snakes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, changeDate, uuid, burialAttended, gatheringAttended, traveled, burials, gatherings, travels, directContactConfirmedCase, directContactProbableCase, closeContactProbableCase, areaConfirmedCases, processingConfirmedCaseFluidUnsafe, percutaneousCaseBlood, directContactDeadUnsafe, processingSuspectedCaseSampleUnsafe, areaInfectedAnimals, sickDeadAnimals, sickDeadAnimalsDetails, sickDeadAnimalsDate, sickDeadAnimalsLocation, eatingRawAnimalsInInfectedArea, eatingRawAnimals, eatingRawAnimalsDetails, rodents, bats, primates, swine, birds, rabbits, cattle, dogs, cats, canidae, otherAnimals, otherAnimalsDetails, waterSource, waterSourceOther, waterBody, waterBodyDetails, tickBite, fleaBite, kindOfExposureBite, kindOfExposureTouch, kindOfExposureScratch, kindOfExposureLick, kindOfExposureOther, kindOfExposureDetails, dateOfLastExposure, placeOfLastExposure, animalCondition, animalVaccinationStatus, prophylaxisStatus, dateOfProphylaxis, visitedHealthFacility, contactWithSourceRespiratoryCase, visitedAnimalMarket, camels, snakes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EpiDataDto {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    changeDate: ").append(toIndentedString(changeDate)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    burialAttended: ").append(toIndentedString(burialAttended)).append("\n");
    sb.append("    gatheringAttended: ").append(toIndentedString(gatheringAttended)).append("\n");
    sb.append("    traveled: ").append(toIndentedString(traveled)).append("\n");
    sb.append("    burials: ").append(toIndentedString(burials)).append("\n");
    sb.append("    gatherings: ").append(toIndentedString(gatherings)).append("\n");
    sb.append("    travels: ").append(toIndentedString(travels)).append("\n");
    sb.append("    directContactConfirmedCase: ").append(toIndentedString(directContactConfirmedCase)).append("\n");
    sb.append("    directContactProbableCase: ").append(toIndentedString(directContactProbableCase)).append("\n");
    sb.append("    closeContactProbableCase: ").append(toIndentedString(closeContactProbableCase)).append("\n");
    sb.append("    areaConfirmedCases: ").append(toIndentedString(areaConfirmedCases)).append("\n");
    sb.append("    processingConfirmedCaseFluidUnsafe: ").append(toIndentedString(processingConfirmedCaseFluidUnsafe)).append("\n");
    sb.append("    percutaneousCaseBlood: ").append(toIndentedString(percutaneousCaseBlood)).append("\n");
    sb.append("    directContactDeadUnsafe: ").append(toIndentedString(directContactDeadUnsafe)).append("\n");
    sb.append("    processingSuspectedCaseSampleUnsafe: ").append(toIndentedString(processingSuspectedCaseSampleUnsafe)).append("\n");
    sb.append("    areaInfectedAnimals: ").append(toIndentedString(areaInfectedAnimals)).append("\n");
    sb.append("    sickDeadAnimals: ").append(toIndentedString(sickDeadAnimals)).append("\n");
    sb.append("    sickDeadAnimalsDetails: ").append(toIndentedString(sickDeadAnimalsDetails)).append("\n");
    sb.append("    sickDeadAnimalsDate: ").append(toIndentedString(sickDeadAnimalsDate)).append("\n");
    sb.append("    sickDeadAnimalsLocation: ").append(toIndentedString(sickDeadAnimalsLocation)).append("\n");
    sb.append("    eatingRawAnimalsInInfectedArea: ").append(toIndentedString(eatingRawAnimalsInInfectedArea)).append("\n");
    sb.append("    eatingRawAnimals: ").append(toIndentedString(eatingRawAnimals)).append("\n");
    sb.append("    eatingRawAnimalsDetails: ").append(toIndentedString(eatingRawAnimalsDetails)).append("\n");
    sb.append("    rodents: ").append(toIndentedString(rodents)).append("\n");
    sb.append("    bats: ").append(toIndentedString(bats)).append("\n");
    sb.append("    primates: ").append(toIndentedString(primates)).append("\n");
    sb.append("    swine: ").append(toIndentedString(swine)).append("\n");
    sb.append("    birds: ").append(toIndentedString(birds)).append("\n");
    sb.append("    rabbits: ").append(toIndentedString(rabbits)).append("\n");
    sb.append("    cattle: ").append(toIndentedString(cattle)).append("\n");
    sb.append("    dogs: ").append(toIndentedString(dogs)).append("\n");
    sb.append("    cats: ").append(toIndentedString(cats)).append("\n");
    sb.append("    canidae: ").append(toIndentedString(canidae)).append("\n");
    sb.append("    otherAnimals: ").append(toIndentedString(otherAnimals)).append("\n");
    sb.append("    otherAnimalsDetails: ").append(toIndentedString(otherAnimalsDetails)).append("\n");
    sb.append("    waterSource: ").append(toIndentedString(waterSource)).append("\n");
    sb.append("    waterSourceOther: ").append(toIndentedString(waterSourceOther)).append("\n");
    sb.append("    waterBody: ").append(toIndentedString(waterBody)).append("\n");
    sb.append("    waterBodyDetails: ").append(toIndentedString(waterBodyDetails)).append("\n");
    sb.append("    tickBite: ").append(toIndentedString(tickBite)).append("\n");
    sb.append("    fleaBite: ").append(toIndentedString(fleaBite)).append("\n");
    sb.append("    kindOfExposureBite: ").append(toIndentedString(kindOfExposureBite)).append("\n");
    sb.append("    kindOfExposureTouch: ").append(toIndentedString(kindOfExposureTouch)).append("\n");
    sb.append("    kindOfExposureScratch: ").append(toIndentedString(kindOfExposureScratch)).append("\n");
    sb.append("    kindOfExposureLick: ").append(toIndentedString(kindOfExposureLick)).append("\n");
    sb.append("    kindOfExposureOther: ").append(toIndentedString(kindOfExposureOther)).append("\n");
    sb.append("    kindOfExposureDetails: ").append(toIndentedString(kindOfExposureDetails)).append("\n");
    sb.append("    dateOfLastExposure: ").append(toIndentedString(dateOfLastExposure)).append("\n");
    sb.append("    placeOfLastExposure: ").append(toIndentedString(placeOfLastExposure)).append("\n");
    sb.append("    animalCondition: ").append(toIndentedString(animalCondition)).append("\n");
    sb.append("    animalVaccinationStatus: ").append(toIndentedString(animalVaccinationStatus)).append("\n");
    sb.append("    prophylaxisStatus: ").append(toIndentedString(prophylaxisStatus)).append("\n");
    sb.append("    dateOfProphylaxis: ").append(toIndentedString(dateOfProphylaxis)).append("\n");
    sb.append("    visitedHealthFacility: ").append(toIndentedString(visitedHealthFacility)).append("\n");
    sb.append("    contactWithSourceRespiratoryCase: ").append(toIndentedString(contactWithSourceRespiratoryCase)).append("\n");
    sb.append("    visitedAnimalMarket: ").append(toIndentedString(visitedAnimalMarket)).append("\n");
    sb.append("    camels: ").append(toIndentedString(camels)).append("\n");
    sb.append("    snakes: ").append(toIndentedString(snakes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
